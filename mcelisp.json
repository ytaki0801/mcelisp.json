{
    "comments": [
	"Meta-Circular Evaluator of LISP in JSON",

	"This code is licensed under CC0.",
	"https://creativecommons.org/publicdomain/zero/1.0/",

	"Descriptions of each lambda expressions:",
	"[0] bootstrap env, with initial env as a plist",
	"[1] EVL: eval 'quote', 'cond' and 'lambda' and call apply",
	"[2] APY: apply 'car', 'cdr', 'cons', 'eq?', 'pair?' and closure",
	"[3] APD: utility function to append two lists",
	"[4] PLS: utility function to make a plist for local env",
	"[5] GVP: utility function to get a value from plist",
	"[6] ECD: utility function to eval cond-ret lists",
	"[7] EAG: utility function to eval args",
	"[8] S: sample code to return the following",
	"[ [ 'O' ],                     ",
	"  [ 'O', 'O' ],                ",
	"  [ 'O', 'O', 'O' ],           ",
	"  [ 'O', 'O', 'O', 'O' ],      ",
	"  [ 'O', 'O', 'O', 'O', 'O' ] ]",
	"Note that list structure is not conscells but linked list",
	"and lexical scope is supposed in lambda expressions."
    ],

    "mcelisp":

    [["lambda",["EVL","APY","APD","PLS","GVP","ECD","EAG","S"],
      ["EVL","S",
       ["quote",
	["car","car","cdr","cdr","cons","cons","eq?","eq?","pair?","pair?"]],
       "APD","PLS","GVP","ECD","EAG","APY"]],

     [["lambda",["U"],["U","U"]],
      ["lambda",["U"],
       ["lambda",["S","E","APD","PLS","GVP","ECD","EAG","APY"],
	["cond",
	 [["pair?","S"],
	  ["cond",
	   [["eq?",["car","S"],["quote","quote"]],
	    ["car",["cdr","S"]]],
	   [["eq?",["car","S"],["quote","cond"]],
	    ["ECD",["cdr","S"],"E",
	     "U","APD","PLS","GVP","ECD","EAG","APY"]],
	   [["eq?",["car","S"],["quote","lambda"]],
	    ["APD","S",["cons","E",["quote",[]]]]],
	   ["else",["APY",[["U","U"],["car","S"],"E",
			   "APD","PLS","GVP","ECD","EAG","APY"],
		    ["EAG",["cdr","S"],"E",
		     "U","APD","PLS","GVP","ECD","EAG","APY"],
		    "U","APD","PLS","GVP","ECD","EAG","APY"]]]],
	 ["else",["GVP","S","E"]]]]]],

     ["lambda",["F","A","U","APD","PLS","GVP","ECD","EAG","APY"],
      ["cond",
       [["pair?","F"],
	[["U","U"],["car",["cdr",["cdr","F"]]],
	 ["APD",["PLS",["car",["cdr","F"]],"A"],
	  ["car",["cdr",["cdr",["cdr","F"]]]]],
	 "APD","PLS","GVP","ECD","EAG","APY"]],
       [["eq?","F",["quote","car"]],["car",["car","A"]]],
       [["eq?","F",["quote","cdr"]],["cdr",["car","A"]]],
       [["eq?","F",["quote","cons"]],
	["cons",["car","A"],["car",["cdr","A"]]]],
       [["eq?","F",["quote","eq?"]],
	["eq?",["car","A"],["car",["cdr","A"]]]],
       [["eq?","F",["quote","pair?"]],["pair?",["car","A"]]]]],
 
     [["lambda",["U"],["U","U"]],
      ["lambda",["U"],
       ["lambda",["A","B"],
	["cond",
	 [["eq?","A",["quote",[]]],"B"],
	 ["else",["cons",["car","A"],[["U","U"],["cdr","A"],"B"]]]]]]],
 
     [["lambda",["U"],["U","U"]],
      ["lambda",["U"],
       ["lambda",["A","B"],
	["cond",
	 [["eq?","A",["quote",[]]],["quote",[]]],
	 [["eq?","B",["quote",[]]],["quote",[]]],
	 ["else", ["cons",["car","A"],
		   ["cons",["car","B"],
		    [["U","U"],["cdr","A"],["cdr","B"]]]]]]]]],

     [["lambda",["U"],["U","U"]],
      ["lambda",["U"],
       ["lambda",["K","V"],
	["cond",
	 [["eq?","V",["quote",[]]],["quote",[]]],
	 [["eq?","K",["car","V"]],["car",["cdr","V"]]],
	 ["else",[["U","U"],"K",["cdr",["cdr","V"]]]]]]]],

     [["lambda",["M"],["M","M"]],
      ["lambda",["M"],
       ["lambda",["P","E","U","APD","PLS","GVP","ECD","EAG","APY"],
	["cond",
	 [["eq?","P",["quote",[]]], ["quote",[]]],
	 [["eq?",["car",["car","P"]],["quote","else"]],
	  [["U","U"],["car",["cdr",["car","P"]]],"E",
	   "APD","PLS","GVP","ECD","EAG","APY"]],
	 [[["U","U"],["car",["car","P"]],"E",
	   "APD","PLS","GVP","ECD","EAG","APY"],
	  [["U","U"],["car",["cdr",["car","P"]]],"E",
	   "APD","PLS","GVP","ECD","EAG","APY"]],
	 ["else",[["M","M"],["cdr","P"],"E",
		  "U","APD","PLS","GVP","ECD","EAG","APY"]]]]]],
     
     [["lambda",["M"],["M","M"]],
      ["lambda",["M"],
       ["lambda",["A","E","U","APD","PLS","GVP","ECD","EAG","APY"],
	["cond",
	 [["eq?","A",["quote",[]]],["quote",[]]],
	 ["else",["cons",[["U","U"],["car","A"],"E",
			  "APD","PLS","GVP","ECD","EAG","APY"],
		  [["M","M"],["cdr","A"],"E",
		   "U","APD","PLS","GVP","ECD","EAG","APY"]]]]]]],

     ["quote",

      [[["lambda",["U"],["U","U"]],
	["lambda",["U"],
	 ["lambda",["X","R"],
	  ["cond",
	   [["eq?","X",["quote",[]]],"R"],
	   ["else",[["U","U"],["cdr","X"],["cons","X","R"]]]]]]],
       ["quote",["O","O","O","O","O"]],
       ["quote",[]]]

     ]]
}
